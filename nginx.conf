events {
    worker_connections 1024;
}

env LAUNCHDARKLY_SDK_KEY;
env LAUNCHDARKLY_FLAG_KEY;
env FALLBACK_DOMAIN;

http {
    resolver 8.8.8.8;

    include /usr/local/openresty/nginx/conf/mime.types;

    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /usr/local/openresty/nginx/logs/access.log main;

    sendfile on;

    keepalive_timeout 65;

    lua_package_path ";;/usr/local/openresty/nginx/scripts/?.lua;";

    init_worker_by_lua_file scripts/shared.lua;

    server {
        location / {
            default_type text/html;

            set $upstream "";

            rewrite_by_lua_block {
                local os     = require("os")
                local ld     = require("launchdarkly_server_sdk")
                local client = require("shared")
                local get_from_env_or_default = require("get_from_env_or_default")
                -- e.g. cookieのbypass_tokenというkeyに保存されている値を取得
                local token = ngx.var.cookie_bypass_token

                local context = ld.makeContext({
                    -- launchDarklyのcontextを作成
                    bypass_token = {
                        key = "dynamic-proxying",
                        attributes = {
                           token = token
                        }
                    }
                })

                ngx.var.upstream = client:stringVariation(context, get_from_env_or_default("LAUNCHDARKLY_FLAG_KEY", ""), get_from_env_or_default("FALLBACK_DOMAIN", ""))
            }

            proxy_http_version 1.1;
            proxy_pass https://$upstream;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
